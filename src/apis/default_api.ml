(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let eval ~eval_request_src_t =
  let open Lwt.Infix in
  let uri = Request.build_uri "/eval/by-src" in
  let headers = Request.default_headers in
  let body =
    Request.write_as_json_body Eval_request_src.to_yojson eval_request_src_t
  in
  Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
  Request.read_json_body resp body

let get_history () =
  let open Lwt.Infix in
  let uri = Request.build_uri "/history" in
  let headers = Request.default_headers in
  Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
  Request.read_json_body resp body

let get_status () =
  let open Lwt.Infix in
  let uri = Request.build_uri "/status" in
  let headers = Request.default_headers in
  Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
  Request.read_json_body resp body

let instance_by_name ~instance_request_name_t =
  let open Lwt.Infix in
  let uri = Request.build_uri "/instance/by-name" in
  let headers = Request.default_headers in
  let body =
    Request.write_as_json_body Instance_request_name.to_yojson
      instance_request_name_t
  in
  Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
  Request.read_json_body resp body

let instance_by_src ~instance_request_src_t =
  let open Lwt.Infix in
  let uri = Request.build_uri "/instance/by-src" in
  let headers = Request.default_headers in
  let body =
    Request.write_as_json_body Instance_request_src.to_yojson
      instance_request_src_t
  in
  Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
  Request.read_json_body
    (* (JsonSupport.unwrap Instance_response.of_yojson) *)
    resp body

(* TODO: fix in the server side to send reset info in the body? currently it returns "{}". *)
let reset () =
  let open Lwt.Infix in
  let uri = Request.build_uri "/reset" in
  let headers = Request.default_headers in
  Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
  Request.read_json_body resp body

let shutdown () =
  let open Lwt.Infix in
  let uri = Request.build_uri "/shutdown" in
  let headers = Request.default_headers in
  Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
  (* Request.read_json_body_as JsonSupport.to_string resp body *)
  Request.read_json_body resp body

let verify_by_name ~verify_request_name_t =
  let open Lwt.Infix in
  let uri = Request.build_uri "/verify/by-name" in
  let headers = Request.default_headers in
  let body =
    Request.write_as_json_body Verify_request_name.to_yojson
      verify_request_name_t
  in
  Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
  Request.read_json_body resp body

let verify_by_src ~verify_request_src_t =
  let open Lwt.Infix in
  let uri = Request.build_uri "/verify/by-src" in
  let headers = Request.default_headers in
  let body =
    Request.write_as_json_body Verify_request_src.to_yojson verify_request_src_t
  in
  Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
  Request.read_json_body resp body
