name: Main workflow

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          # - macos-latest
          - ubuntu-latest
          # - windows-latest
        ocaml-compiler:
          - 4.14.x
          # - 4.08.x
          # - 4.06.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
      - name: Install system dependencies. 
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libssl-dev
          sudo apt-get install libgdbm6 
          sudo apt-get install libgdbm-dev
          sudo apt-get install libzmq3-dev
      - name: Install project dependencies
        run: opam install . --deps-only --with-doc --with-test

      # - name: Restore imandra-tmp opam cache.
      #   uses: actions/cache@v2
      #   id: imandracache
      #   with:
      #     path: |
      #       /tmp/imandra-tmp/_opam
      #     key: ${{ matrix.os }}-imandra-http-api
    
      # - name: Copy Imandra HTTP API 
      #   if: steps.imandracache.outputs.cache-hit == 'true'
      #   run: 
      #     cp /tmp/imandra-tmp/_opam/bin/imandra-http-api /usr/local/bin

      - name: Install Imandra.
        run: |
            curl -O "https://storage.googleapis.com/imandra-installer/install.sh" 
            sh ./install.sh
          
      - name: Authenticate Imandra. 
        run: 
          echo ${{ secrets.IMANDRA_AUTH_TOKEN }} > token.txt
          imandra auth import < token.txt

      - name: Build the project
        run: opam exec -- dune build @install

      - name: Run tests
        run: opam exec -- dune runtest